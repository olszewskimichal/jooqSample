/*
 * This file is generated by jOOQ.
 */
package pl.michal.olszewski.jooqsample.db.tables.records;


import javax.annotation.Generated;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import pl.michal.olszewski.jooqsample.db.tables.Customer;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class CustomerRecord extends UpdatableRecordImpl<CustomerRecord> implements Record2<Long, String> {

  private static final long serialVersionUID = -1009424296;

  /**
   * Create a detached CustomerRecord
   */
  public CustomerRecord() {
    super(Customer.CUSTOMER);
  }

  /**
   * Create a detached, initialised CustomerRecord
   */
  public CustomerRecord(Long id, String email) {
    super(Customer.CUSTOMER);

    set(0, id);
    set(1, email);
  }

  /**
   * Getter for <code>PUBLIC.CUSTOMER.ID</code>.
   */
  public Long getId() {
    return (Long) get(0);
  }

  /**
   * Setter for <code>PUBLIC.CUSTOMER.ID</code>.
   */
  public void setId(Long value) {
    set(0, value);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  /**
   * Getter for <code>PUBLIC.CUSTOMER.EMAIL</code>.
   */
  public String getEmail() {
    return (String) get(1);
  }

  // -------------------------------------------------------------------------
  // Record2 type implementation
  // -------------------------------------------------------------------------

  /**
   * Setter for <code>PUBLIC.CUSTOMER.EMAIL</code>.
   */
  public void setEmail(String value) {
    set(1, value);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Record1<Long> key() {
    return (Record1) super.key();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Row2<Long, String> fieldsRow() {
    return (Row2) super.fieldsRow();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Row2<Long, String> valuesRow() {
    return (Row2) super.valuesRow();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<Long> field1() {
    return Customer.CUSTOMER.ID;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<String> field2() {
    return Customer.CUSTOMER.EMAIL;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Long value1() {
    return getId();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public String value2() {
    return getEmail();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public CustomerRecord value1(Long value) {
    setId(value);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * {@inheritDoc}
   */
  @Override
  public CustomerRecord value2(String value) {
    setEmail(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public CustomerRecord values(Long value1, String value2) {
    value1(value1);
    value2(value2);
    return this;
  }
}
